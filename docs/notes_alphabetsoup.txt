# alphabetsoup

======================================

A kind of REAME.first file
... but in reality the content are my notes

======================================

This is the base web micro application
for your own
functionality implementation.
It is wrapped into a Flask Web Framework.

======================================

Proceed with the next commands
from your OS Command Line

======================================

App sources download

Note: following commands include settings for proxy server.
Adapt to yours.

$ git config --global http.proxy http://proxy.mycompany:80
$ git clone https://github.com/daniel-julio-iglesias/alphabetsoup
(...)

=====================================

Setup your environment variables for Proxy:

http_proxy: http://username:password@Proxyadresse:Proxyport
https_proxy: https://username:password@Proxyadresse:Proxyport


======================================
Activate virtualenv

On Linux
$ source venv/bin/activate
(venv) $ _

On MS Windows
$ venv\Scripts\activate
(venv) $ _

======================================

Install requirements packages after app sources download

$ pip install -r requirements.txt

======================================

on Linux
(venv) $ export FLASK_APP=alphabetsoup.py
on MS Windows
(venv) $ set FLASK_APP=alphabetsoup.py

======================================


Apply the next db steps after downloading your app sources
to initialize your database


(venv) $ flask db init
(venv) $ flask db migrate -m "users table"
(venv) $ flask db upgrade

======================================

You can run the application
(after installing it
as intended with the below section notes)

On Linux
(venv) $ export FLASK_APP=alphabetsoup.py
On MS Windows
(venv) $ set FLASK_APP=alphabetsoup.py

(venv) $ flask run

..register your user...
..test introducing file name "01.txt" ...

The below initial project notes are from my exercises based on
The Flask Mega-Tutorial
https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world

Enjoy it and please, let me know any comments to make it better/useful.
Thank you.



======================================

Run the application

on Linux
(venv) $ export FLASK_APP=alphabetsoup.py
on MS Windows
(venv) $ set FLASK_APP=alphabetsoup.py

(venv) $ flask run


URL: http://localhost:5000/
URL: http://localhost:5000/index

======================================


TODO: Adapt to your functionality


======================================

Alphabet soup

Everyone loves alphabet soup.  And of course, you want to know if you can construct
a message from the letters found in your bowl.

Your Task:

Write a function that takes as input two strings:
the message you want to write
all the letters found in your bowl of alphabet soup.

Assumptions:
It may be a very large bowl of soup containing many letters.
There is no guarantee that each letter occurs a similar number of times -
indeed some letters might be missing entirely.
The letters are ordered randomly.

The function should determine if you can write your message with the letters
found in your bowl of soup. The function should return True or False accordingly.

Try to make your function efficient.  Please use Big-O notation to explain how long
it takes your function to run in terms of the length of your message (m) and the number
of letters in your bowl of soup (s).

You may write the function in any programming language you prefer -
but please consider the language required by the position for which you are applying.

======================================

1. Write down the problem.
2. Think real hard.
3. Write down the solution.

— “The Feynman Algorithm”
as described by Murray Gell-Mann

======================================



======================================




======================================

